import 'package:draw/draw.dart' as draw;

class Comment {
  String subredditId;
  bool authorIsBlocked;
  String commentType;
  String linkTitle;
  int ups;
  String authorFlairType;
  int totalAwardsReceived;
  String subreddit;
  String linkAuthor;
  int likes;
  String replies;
  bool saved;
  String id;
  int gilded;
  bool archived;
  bool noFollow;
  String author;
  int numComments;
  bool sendReplies;
  String parentId;
  int score;
  String authorFullname;
  bool over18;
  int controversiality;
  String body;
  bool edited;
  int downs;
  bool isSubmitter;
  bool collapsed;
  String bodyHtml;
  bool distinguished;
  bool stickied;
  bool authorPremium;
  String linkId;
  String permalink;
  String subredditType;
  String linkPermalink;
  String name;
  String subredditNamePrefixed;
  List<Null> treatmentTags;
  int created;
  int createdUtc;
  bool locked;
  bool quarantine;
  String linkUrl;

  Comment(
      {required this.subredditId,
      required this.authorIsBlocked,
      required this.commentType,
      required this.linkTitle,
      required this.ups,
      required this.authorFlairType,
      required this.totalAwardsReceived,
      required this.subreddit,
      required this.linkAuthor,
      required this.likes,
      required this.replies,
      required this.saved,
      required this.id,
      required this.gilded,
      required this.archived,
      required this.noFollow,
      required this.author,
      required this.numComments,
      required this.sendReplies,
      required this.parentId,
      required this.score,
      required this.authorFullname,
      required this.over18,
      required this.controversiality,
      required this.body,
      required this.edited,
      required this.downs,
      required this.isSubmitter,
      required this.collapsed,
      required this.bodyHtml,
      required this.distinguished,
      required this.stickied,
      required this.authorPremium,
      required this.linkId,
      required this.permalink,
      required this.subredditType,
      required this.linkPermalink,
      required this.name,
      required this.subredditNamePrefixed,
      required this.treatmentTags,
      required this.created,
      required this.createdUtc,
      required this.locked,
      required this.quarantine,
      required this.linkUrl});

  factory Comment.fromDrawComment(draw.Comment comment) {
    final data = comment.data!;

    return Comment(
      subredditId: data['subreddit_id'],
      authorIsBlocked: data['author_is_blocked'],
      commentType: data['comment_type'],
      linkTitle: data['link_title'],
      ups: data['ups'],
      authorFlairType: data['author_flair_type'],
      totalAwardsReceived: data['total_awards_received'],
      subreddit: data['subreddit'],
      linkAuthor: data['link_author'],
      likes: data['likes'],
      replies: data['replies'],
      saved: data['saved'],
      id: data['id'],
      gilded: data['gilded'],
      archived: data['archived'],
      noFollow: data['no_follow'],
      author: data['author'],
      numComments: data['num_comments'],
      sendReplies: data['send_replies'],
      parentId: data['parent_id'],
      score: data['score'],
      authorFullname: data['author_fullname'],
      over18: data['over_18'],
      controversiality: data['controversiality'],
      body: data['body'],
      edited: data['edited'],
      downs: data['downs'],
      isSubmitter: data['is_submitter'],
      collapsed: data['collapsed'],
      bodyHtml: data['body_html'],
      distinguished: data['distinguished'],
      stickied: data['stickied'],
      authorPremium: data['author_premium'],
      linkId: data['link_id'],
      permalink: data['permalink'],
      subredditType: data['subreddit_type'],
      linkPermalink: data['link_permalink'],
      name: data['name'],
      subredditNamePrefixed: data['subreddit_name_prefixed'],
      treatmentTags: data['treatment_tags'],
      created: data['created'],
      createdUtc: data['created_utc'],
      locked: data['locked'],
      quarantine: data['quarantine'],
      linkUrl: data['link_url'],
    );
  }
}
